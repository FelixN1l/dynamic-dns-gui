version: '3.8'
services:
  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: nginx-proxy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:ro
      - ./nginx/vhost.d:/etc/nginx/vhost.d
      - ./nginx/html:/usr/share/nginx/html
    labels:
      - "com.github.nginx-proxy.nginx=true"

  nginx-letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-letsencrypt
    restart: always
    depends_on:
      - nginx-proxy
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
      - ACME_CA_URI=https://acme-v02.api.letsencrypt.org/directory
      - LETSENCRYPT_DEBUG=true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./nginx/certs:/etc/nginx/certs:rw
      - ./nginx/vhost.d:/etc/nginx/vhost.d:rw
      - ./nginx/html:/usr/share/nginx/html:rw

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    env_file: .env
    expose:
      - "5000"
    environment:
      - VIRTURAL_HOST=dns.milou.life
      - VIRTURAL_PORT=5000
      - LETSENCRYPT_HOST=dns.milou.life
      - LETSENCRYPT_EMAIL=miloutin@protonmail.com
    depends_on:
      - db
    restart: always

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    env_file: frontend/.env
    expose:
      - "80"
    environment:
      - VIRTURAL_HOST=dns.milou.life 
      - VIRTURAL_PORT=5000
      - LETSENCRYPT_HOST=dns.milou.life 
      - LETSENCRYPT_EMAIL=miloutin@protonmail.com
    restart: always

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgrespassword
      - POSTGRES_DB=dynamic_dns
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

volumes:
  pgdata: